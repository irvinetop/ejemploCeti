{"version":3,"sources":["sticker.webp","telefonica-chema-alonso.jpg","migue.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","className","Container","text","style","marginTop","Table","celled","Header","Row","HeaderCell","Body","Cell","Label","ribbon","backgroundColor","src","javi","width","alt","migue","chema","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,G,MAAA,IAA0B,sCCA1B,MAA0B,oDCA1B,MAA0B,kC,gDC8D1BA,MAvDf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWC,MAAI,EAAf,UACE,oBAAIC,MAAO,CAAEC,UAAW,IAAxB,4BACA,eAACC,EAAA,EAAD,CAAOC,QAAM,EAAb,UACE,cAACD,EAAA,EAAME,OAAP,UACE,eAACF,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMI,WAAP,0BACA,cAACJ,EAAA,EAAMI,WAAP,sBACA,cAACJ,EAAA,EAAMI,WAAP,wBAIJ,eAACJ,EAAA,EAAMK,KAAP,WACE,eAACL,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMM,KAAP,UACE,cAACC,EAAA,EAAD,CAAOC,QAAM,EAACV,MAAO,CAAEW,gBAAiB,QAAxC,qBAIF,cAACT,EAAA,EAAMM,KAAP,wCACA,cAACN,EAAA,EAAMM,KAAP,UACE,qBAAKI,IAAKC,EAAMb,MAAO,CAAEc,MAAO,KAAOC,IAAI,cAG/C,eAACb,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMM,KAAP,UACE,cAACC,EAAA,EAAD,CAAOC,QAAM,EAACV,MAAO,CAAEW,gBAAiB,UAAxC,qBAIF,cAACT,EAAA,EAAMM,KAAP,qCACA,cAACN,EAAA,EAAMM,KAAP,UACE,qBAAKI,IAAKI,EAAOhB,MAAO,CAAEc,MAAO,KAAOC,IAAI,cAGhD,eAACb,EAAA,EAAMG,IAAP,WACE,cAACH,EAAA,EAAMM,KAAP,UACE,cAACC,EAAA,EAAD,CAAOC,QAAM,EAACV,MAAO,CAAEW,gBAAiB,aAAxC,qBAIF,cAACT,EAAA,EAAMM,KAAP,2BACA,cAACN,EAAA,EAAMM,KAAP,UACE,qBAAKI,IAAKK,EAAOjB,MAAO,CAAEc,MAAO,KAAOC,IAAI,0BCxC7CG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3f60defc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sticker.6f43ac7f.webp\";","export default __webpack_public_path__ + \"static/media/telefonica-chema-alonso.b90dc199.jpg\";","export default __webpack_public_path__ + \"static/media/migue.61020ee4.jpg\";","import javi from \"./sticker.webp\";\nimport chema from \"./telefonica-chema-alonso.jpg\";\nimport migue from \"./migue.jpg\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Container, Header, Icon, Label, Menu, Table } from \"semantic-ui-react\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container text>\n        <h1 style={{ marginTop: 20 }}>Hacker del dia</h1>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Posición</Table.HeaderCell>\n              <Table.HeaderCell>Ganador</Table.HeaderCell>\n              <Table.HeaderCell>Foto</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Label ribbon style={{ backgroundColor: \"gold\" }}>\n                  1º\n                </Label>\n              </Table.Cell>\n              <Table.Cell>Javier Gonzalez Loureiro </Table.Cell>\n              <Table.Cell>\n                <img src={javi} style={{ width: 200 }} alt=\"logo\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Label ribbon style={{ backgroundColor: \"silver\" }}>\n                  2º\n                </Label>\n              </Table.Cell>\n              <Table.Cell>Migue Rodriguez Flores</Table.Cell>\n              <Table.Cell>\n                <img src={migue} style={{ width: 200 }} alt=\"logo\" />\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>\n                <Label ribbon style={{ backgroundColor: \"chocolate\" }}>\n                  3º\n                </Label>\n              </Table.Cell>\n              <Table.Cell>Chema Alonso</Table.Cell>\n              <Table.Cell>\n                <img src={chema} style={{ width: 200 }} alt=\"logo\" />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}